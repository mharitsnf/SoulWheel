[gd_resource type="Resource" load_steps=3 format=2]

[ext_resource path="res://Resources/Enemies/enemy_data_model.gd" type="Script" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node


var preprocess
var process
var postprocess

var process_time = 0

var rng = RandomNumberGenerator.new()
var tween = Tween.new()

# Attack:
# Enemy1 has one attack pattern.
# 1. One area with constant speed.

# Defend:
# Enemy1 has one defend pattern.
# 1. One area with constant speed.


func _init(current_behavior):
	rng.randomize()
	
	match current_behavior:
		Character.Behavior.ATTACK:
			preprocess = funcref(self, \"preprocess_a\")
			process = funcref(self, \"process_a\")
			postprocess = funcref(self, \"postprocess_a\")
		
		Character.Behavior.DEFEND:
			preprocess = funcref(self, \"preprocess_d\")
			process = funcref(self, \"process_d\")
			postprocess = funcref(self, \"postprocess_d\")


# ===== ATTACK =====
func preprocess_a(areas, behavior_idx):
	rng.randomize()
	
	match behavior_idx:
		0: return preprocess_a1(areas)
		1: return preprocess_a2(areas)


# behavior 1
func preprocess_a1(areas):
	var rot_angle_variation = rng.randi_range(0, 360)
	
	for area in areas:
		# process rotation angle
		area.rot_angle += rot_angle_variation
		area.rot_angle = fmod(area.rot_angle, 360)
		if area.rot_angle < 0: area.rot_angle += 360
		
		# process thickness
		area.thickness = clamp(area.thickness, 2, 360)
		area.thickness = floor(area.thickness / 2)
	
	return areas


# behavior 2
func preprocess_a2(areas):
	var rot_angle_variation = rng.randi_range(0, 360)
	
	for area in areas:
		# process rotation angle
		area.rot_angle += rot_angle_variation
		area.rot_angle = fmod(area.rot_angle, 360)
		if area.rot_angle < 0: area.rot_angle += 360
		
		# process thickness
		area.thickness = clamp(area.thickness, 2, 360)
		area.thickness = floor(area.thickness / 2)
	
	return areas


func process_a(areas, delta, behavior_idx):
	match behavior_idx:
		0: return process_a1(areas, delta)
		1: return process_a2(areas, delta)


# behavior 1
func process_a1(areas, delta):
	for area in areas:
		# process rotation angle
		area.rot_angle += delta * area.move_speed
		area.rot_angle = fmod(area.rot_angle, 360)
	
	process_time += delta
	return areas


# behavior 2
func process_a2(areas, delta):
	for area in areas:
		# process rotation angle
		area.rot_angle += delta * area.move_speed
		area.rot_angle = fmod(area.rot_angle, 360)
	
	process_time += delta
	return areas


func postprocess_a(areas, behavior_idx):
	process_time = 0
	
	match behavior_idx:
		0: return postprocess_a1(areas)
		1: return postprocess_a2(areas)


# behavior 1
func postprocess_a1(areas):
	return areas


# behavior 2
func postprocess_a2(areas):
	return areas

# ==================


# ===== DEFEND =====
func preprocess_d(areas, behavior_idx):
	rng.randomize()
	
	match behavior_idx:
		0: return preprocess_d1(areas)


func preprocess_d1(areas):
	for area in areas:
		# process rotation angle
		area.rot_angle += rng.randi_range(0, 360)
		area.rot_angle = fmod(area.rot_angle, 360)
		if area.rot_angle < 0: area.rot_angle += 360
		
		# process thickness
		area.thickness = clamp(area.thickness, 2, 360)
		area.thickness = floor(area.thickness / 2)
	
	return areas


func process_d(areas, delta, behavior_idx):
	match behavior_idx:
		0: return process_d1(areas, delta)


func process_d1(areas, delta):
	for area in areas:
		area.rot_angle += delta * area.move_speed
		area.rot_angle = fmod(area.rot_angle, 360)
	
	return areas


func postprocess_d(areas, behavior_idx):
	match behavior_idx:
		0: return postprocess_d1(areas)


func postprocess_d1(areas):
	return areas
# ==================
"

[resource]
script = ExtResource( 1 )
max_health = 30
soul_areas = [ [ {
"move_speed": 60,
"rot_angle": 0,
"thickness": 60
}, {
"move_speed": 120,
"rot_angle": 0,
"thickness": 15
} ] ]
damage_areas = [ [ {
"damage": 5,
"is_damage_percentage": false,
"move_speed": 50,
"rot_angle": 0,
"thickness": 30
}, {
"damage": 5,
"is_damage_percentage": false,
"move_speed": 50,
"rot_angle": 120,
"thickness": 30
}, {
"damage": 5,
"is_damage_percentage": false,
"move_speed": 50,
"rot_angle": 240,
"thickness": 30
} ], [ {
"damage": 5,
"is_damage_percentage": false,
"move_speed": 50,
"rot_angle": 0,
"thickness": 180
} ] ]
behaviors = SubResource( 1 )
